.pageSection {
    position: relative;
    padding: 17.5vh 0 17.5vh;
    width: 100%;

    &:first-child {
        padding-top: 0;
    }

    &:last-child {
        padding-bottom: 5vh;
    }
}

$divsize: 25px;
.divider {
    @include position(0, 0, auto, 0);
    @include size($divsize);
    position: absolute;
    margin: 0 auto;
    transition: all 0.3s;
    transform-style: preserve-3d;
    --rot: calc(var(--page-section-visibility) * 360deg);
    transform: perspective(250px) rotateY(var(--rot)) rotateX(var(--rot));

    > div {
        @include position(0, 0, 0, 0);
        transition: all 0.3s;
        position: absolute;
        opacity: 0.75;

        @for $i from 1 through 6 {
            &:nth-child(#{$i}) {
                $p: ($i / 6);
                background: rgb($p * 255, $p * 255, $p * 255);
            }
        }

        &:nth-child(1) {
            transform: rotateX(90deg) translateZ($divsize / 2);
        }

        &:nth-child(2) {
            transform: rotateX(-90deg) translateZ($divsize / 2);
        }

        &:nth-child(3) {
            transform: rotateY(-90deg) translateZ($divsize / 2);
        }

        &:nth-child(4) {
            transform: rotateY(90deg) translateZ($divsize / 2);
        }

        &:nth-child(5) {
            transform: translateZ($divsize / 2);
        }

        &:nth-child(6) {
            transform: translateZ($divsize / -2);
        }
    }
}

.header {
    @include font(400, 2em);
    position: relative;

    &:hover > p {
        transform: none;
        opacity: 1;
    }

    > p {
        @include position(0, auto, 0, -1em);
        position: absolute;
        margin: auto;
        height: 1.1em;
        transition: all 0.3s;
        transform: translateX(0.5vw);
        opacity: 0;
    }

    > h1 {
        text-transform: uppercase;
        font-size: 1em;
        display: inline-block;
        position: relative;
        padding: 0.2em 0.5em;
        opacity: var(--page-section-visibility);

        &:not(:first-child) {
            background: var(--c-text);
            color: var(--c-background);
            clip-path: inset(0 calc(100% - var(--page-section-visibility) * 100%) 0 0);
        }

        &:last-child {
            clip-path: inset(0 0 0 calc(var(--page-section-visibility) * 100%));
            background: var(--c-background);
            color: var(--c-text);
            position: absolute;
            left: 0;
        }
    }
}

.intro {
    @include font(400, 1.5em);
    opacity: var(--page-section-visibility);
    margin-bottom: 1em;
    line-height: 1.35;
}

.backgroundHeader {
    @include font(200, var(--font-size));
    @include position(15vh, 0, 0, 0);
    @include flex(row, center, center);
    text-transform: uppercase;
    font-family: $font-family-tags;
    opacity: calc(var(--page-section-visibility) * 0.05);
    margin: auto;
    position: absolute;
    z-index: -1;

    > p {
        transform: scale(calc(0.75 + 0.25 * var(--page-section-visibility))) rotate(-20deg);
    }
}

@include mq-phones {
    .backgroundHeader {
        display: none;
    }
}
