import {Link} from '@components/Link';
import {PageSection} from '@components/PageSection';
import {SkillCard} from '@components/SkillCard';
import {track} from '@utils/ackee';
import {FunctionalComponent} from 'preact';
import {useState} from 'preact/hooks';
import {JSXInternal} from 'preact/src/jsx';
import styles from './Skills.module.scss';

interface Skill {
    name: string;
    summary: string;
    tags: Record<string, string>;
    icon: JSXInternal.Element;
    content: JSXInternal.Element;
}

const skills: Array<Skill> = [
    {
        name: 'Tooling',
        summary: 'Everything about tools and how to make things work.',
        tags: {
            'webpack': 'https://webpack.js.org/',
            'rollup': 'https://rollupjs.org/guide/en/',
            'eslint': 'https://eslint.org/',
            'docker': 'https://www.docker.com/',
            'vite': 'https://vitejs.dev/'
        },
        icon: (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30">
                <path d="M 7 3 L 3 7 L 5.4140625 9.4140625 C 5.7890625 9.7890625 6.298125 10 6.828125 10 L 8.5859375 10 L 13.585938 15 L 8.5859375 20 L 6.828125 20 C 6.298125 20 5.7890625 20.210938 5.4140625 20.585938 L 3 23 L 7 27 L 9.4140625 24.585938 C 9.7890625 24.210938 10 23.701875 10 23.171875 L 10 21.414062 L 15 16.414062 L 20 21.414062 L 20 23.171875 C 20 23.701875 20.210938 24.210938 20.585938 24.585938 L 23 27 L 27 23 L 24.585938 20.585938 C 24.210938 20.210938 23.701875 20 23.171875 20 L 21.414062 20 L 16.414062 15 L 21.414062 10 L 23.171875 10 C 23.701875 10 24.210938 9.7890625 24.585938 9.4140625 L 27 7 L 23 3 L 20.585938 5.4140625 C 20.210938 5.7890625 20 6.298125 20 6.828125 L 20 8.5859375 L 15 13.585938 L 10 8.5859375 L 10 6.828125 C 10 6.298125 9.7890625 5.7890625 9.4140625 5.4140625 L 7 3 z"/>
            </svg>
        ),
        content: (
            <div>
                I worked <Link href="https://github.com/search?q=user%3ASimonwep+filename%3Arollup.js+filename%3Awebpack.config&type=code">extensively </Link>
                with bundlers like <Link href="https://webpack.js.org">webpack</Link> and <Link href="https://rollupjs.org/guide/en">rollup</Link>, while
                working on <Link href="https://github.com/Simonwep/nanopop">small</Link> or <Link href="https://github.com/dot-cafe/beam.cafe">medium-sized</Link> projects.

                <br/>
                <br/>

                I&apos;m also very familiar with transpiler and linter such
                as <Link href="https://babeljs.io/">Babel</Link> and <Link href="https://eslint.org/">ESLint</Link>.
                For example, an ESLint <Link href="https://github.com/Simonwep/eslint-plugin-align-import">plugin</Link> to align import statements.
            </div>
        )
    },
    {
        name: 'Frameworks & Languages',
        summary: 'All the things helping to build things quickly.',
        tags: {
            'typescript': 'https://www.typescriptlang.org/',
            'preact': 'https://preactjs.com/',
            'react': 'https://reactjs.org/',
            'vue (v2 & v3)': 'https://vuejs.org/',
            'angular': 'https://angular.io/',
            'lit-element': 'https://lit-element.polymer-project.org/guide',
            'mobx': 'https://mobx.js.org/',
            'redux': 'https://redux.js.org/',
            'effector': 'https://effector.dev/',
            'scss': 'https://sass-lang.com/',
            'sql': 'https://en.wikipedia.org/wiki/SQL',
            'mongodb': 'https://www.mongodb.com/',
            'graphql': 'https://graphql.org/',
            'rust': 'https://www.rust-lang.org/',
            'rxjs': 'https://rxjs.dev/',
            'express': 'http://expressjs.com/',
            'jest': 'https://jestjs.io/',
            'cypress': 'https://www.cypress.com/',
            'mocha': 'https://mochajs.org/',
            'prisma': 'https://www.prisma.io/',
            'redis': 'https://redis.io/'
        },
        icon: (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30">
                <path d="M 17 1 A 2 2 0 0 0 15.939453 1.3046875 C 15.637679 1.2000128 15.327581 1.125 15 1.125 C 14.002269 1.125 13.111189 1.6583667 12.40625 2.4335938 C 11.701311 3.2088207 11.127614 4.2482813 10.648438 5.4941406 C 10.497589 5.8863467 10.36116 6.3062979 10.230469 6.7382812 C 9.7911287 6.6355061 9.3583416 6.5439638 8.9433594 6.4785156 C 7.6248256 6.2705645 6.4378982 6.2478215 5.4140625 6.4707031 C 4.3902267 6.6935847 3.4832405 7.1984396 2.984375 8.0625 C 2.4855095 8.9265604 2.5014157 9.9647823 2.8203125 10.962891 C 3.1392092 11.961 3.7524391 12.977716 4.5917969 14.015625 C 4.8558919 14.342192 5.1504095 14.671003 5.4589844 15 C 5.1504095 15.328997 4.8558919 15.657808 4.5917969 15.984375 C 4.3139656 16.327928 4.0715276 16.668832 3.8457031 17.007812 A 2 2 0 0 0 2 19 A 2 2 0 0 0 2.6015625 20.427734 C 2.6054315 20.958557 2.716714 21.473898 2.984375 21.9375 C 3.4832405 22.80156 4.3902267 23.306416 5.4140625 23.529297 C 6.4378982 23.752179 7.6248256 23.729472 8.9433594 23.521484 C 9.3583416 23.456036 9.7911287 23.364494 10.230469 23.261719 C 10.36116 23.693702 10.497589 24.113653 10.648438 24.505859 C 11.127614 25.751719 11.701311 26.791179 12.40625 27.566406 C 13.111189 28.341633 14.002269 28.875 15 28.875 C 15.997731 28.875 16.888811 28.341633 17.59375 27.566406 C 18.298689 26.791179 18.872386 25.751719 19.351562 24.505859 C 19.502411 24.113653 19.63884 23.693702 19.769531 23.261719 C 20.208871 23.364494 20.641659 23.456036 21.056641 23.521484 C 21.418734 23.578592 21.767771 23.618546 22.109375 23.646484 A 2 2 0 0 0 24 25 A 2 2 0 0 0 26 23 A 2 2 0 0 0 25.998047 22.974609 C 26.415247 22.712488 26.766193 22.36953 27.015625 21.9375 C 27.514491 21.07344 27.498584 20.035217 27.179688 19.037109 C 26.860791 18.038963 26.247562 17.022284 25.408203 15.984375 C 25.144108 15.657808 24.84959 15.328997 24.541016 15 C 24.84959 14.671003 25.144108 14.342192 25.408203 14.015625 C 26.247562 12.977716 26.860791 11.961 27.179688 10.962891 C 27.498584 9.9648194 27.514491 8.9265604 27.015625 8.0625 C 26.51676 7.1984396 25.609773 6.6935847 24.585938 6.4707031 C 23.562102 6.2478215 22.375176 6.2705642 21.056641 6.4785156 C 20.641659 6.5439637 20.208871 6.6355061 19.769531 6.7382812 C 19.63884 6.3062979 19.502411 5.8863467 19.351562 5.4941406 C 19.151715 4.9745364 18.930707 4.5002459 18.695312 4.0566406 A 2 2 0 0 0 19 3 A 2 2 0 0 0 17 1 z M 15 2.875 C 15.001869 2.875 15.003988 2.8749907 15.005859 2.875 A 2 2 0 0 0 15 3 A 2 2 0 0 0 17 5 A 2 2 0 0 0 17.205078 4.9863281 C 17.383375 5.331222 17.557747 5.7024848 17.71875 6.1210938 C 17.848467 6.4583572 17.968943 6.8237909 18.083984 7.203125 C 17.08936 7.5206308 16.05472 7.9252197 15 8.4042969 C 13.94528 7.9252197 12.91064 7.5206308 11.916016 7.203125 C 12.031057 6.8237909 12.151533 6.4583572 12.28125 6.1210938 C 12.706895 5.0144156 13.209728 4.1498197 13.701172 3.609375 C 14.192616 3.0689303 14.617019 2.875 15 2.875 z M 7.0566406 8.0644531 C 7.5423096 8.0673285 8.0843049 8.1127183 8.6699219 8.2050781 C 9.0273186 8.2614443 9.4044507 8.3414429 9.7910156 8.4316406 C 9.5685492 9.4523017 9.3995784 10.549501 9.2871094 11.703125 C 8.3449615 12.376947 7.4792342 13.070882 6.7070312 13.773438 C 6.4355684 13.483698 6.1787332 13.197407 5.9511719 12.916016 C 5.205583 11.994058 4.7086449 11.125513 4.4863281 10.429688 C 4.2640112 9.7338617 4.3085095 9.2691713 4.5 8.9375 C 4.6914905 8.6058287 5.0713954 8.3350681 5.7851562 8.1796875 C 6.1420366 8.1019971 6.5709716 8.0615778 7.0566406 8.0644531 z M 22.943359 8.0644531 C 23.429029 8.0615778 23.857963 8.1019973 24.214844 8.1796875 C 24.928605 8.3350679 25.30851 8.6058287 25.5 8.9375 C 25.691491 9.2691713 25.735986 9.7338616 25.513672 10.429688 C 25.291355 11.125512 24.794417 11.994057 24.048828 12.916016 C 23.821267 13.197407 23.564432 13.483698 23.292969 13.773438 C 22.520766 13.070882 21.655038 12.376947 20.712891 11.703125 C 20.600422 10.549501 20.431451 9.4523017 20.208984 8.4316406 C 20.595549 8.3414429 20.972681 8.2614443 21.330078 8.2050781 C 21.915695 8.1127183 22.45769 8.0673285 22.943359 8.0644531 z M 11.480469 8.9023438 C 11.949603 9.054938 12.434706 9.2425027 12.925781 9.4355469 C 12.638157 9.5910783 12.350804 9.7456568 12.0625 9.9121094 C 11.774589 10.078335 11.49689 10.250791 11.21875 10.421875 C 11.297126 9.8999437 11.378021 9.385029 11.480469 8.9023438 z M 18.519531 8.9023438 C 18.621979 9.385029 18.702874 9.8999437 18.78125 10.421875 C 18.50311 10.250791 18.225411 10.078335 17.9375 9.9121094 C 17.649196 9.7456568 17.361843 9.5910783 17.074219 9.4355469 C 17.565294 9.2425027 18.050397 9.054938 18.519531 8.9023438 z M 15 10.337891 C 15.682053 10.668561 16.371465 11.028765 17.0625 11.427734 C 17.753866 11.826895 18.411399 12.244368 19.039062 12.669922 C 19.093634 13.425363 19.125 14.202705 19.125 15 C 19.125 15.797295 19.093634 16.574637 19.039062 17.330078 C 18.411399 17.755632 17.753866 18.173105 17.0625 18.572266 C 16.371465 18.971235 15.682053 19.331439 15 19.662109 C 14.317947 19.331439 13.628535 18.971235 12.9375 18.572266 C 12.246134 18.173105 11.588601 17.755632 10.960938 17.330078 C 10.906366 16.574637 10.875 15.797295 10.875 15 C 10.875 14.202705 10.906366 13.425363 10.960938 12.669922 C 11.588601 12.244368 12.246134 11.826895 12.9375 11.427734 C 13.628535 11.028765 14.317947 10.668561 15 10.337891 z M 9.1425781 14.013672 C 9.133462 14.340498 9.125 14.667126 9.125 15 C 9.125 15.332874 9.133462 15.659502 9.1425781 15.986328 C 8.7301823 15.657784 8.3254384 15.329763 7.9589844 15 C 8.3254384 14.670237 8.7301823 14.342216 9.1425781 14.013672 z M 20.857422 14.013672 C 21.269818 14.342216 21.674562 14.670237 22.041016 15 C 21.674562 15.329763 21.269818 15.657784 20.857422 15.986328 C 20.866538 15.659502 20.875 15.332874 20.875 15 C 20.875 14.667126 20.866538 14.340498 20.857422 14.013672 z M 6.7070312 16.226562 C 7.4792342 16.929118 8.3449615 17.623053 9.2871094 18.296875 C 9.3995784 19.450499 9.5685492 20.547698 9.7910156 21.568359 C 9.4044507 21.658557 9.0273186 21.738556 8.6699219 21.794922 C 7.498688 21.979641 6.498917 21.975693 5.7851562 21.820312 C 5.0713924 21.664933 4.6914905 21.394171 4.5 21.0625 C 4.4796415 21.027238 4.4680585 20.983696 4.4511719 20.945312 A 2 2 0 0 0 6 19 A 2 2 0 0 0 5.5019531 17.681641 C 5.6415087 17.48557 5.7873685 17.286535 5.9511719 17.083984 C 6.1787332 16.802593 6.4355684 16.516302 6.7070312 16.226562 z M 23.292969 16.226562 C 23.564432 16.516302 23.821267 16.802593 24.048828 17.083984 C 24.794417 18.005943 25.291355 18.874487 25.513672 19.570312 C 25.735989 20.266139 25.691494 20.730829 25.5 21.0625 C 25.429489 21.18463 25.322269 21.295576 25.193359 21.398438 A 2 2 0 0 0 24 21 A 2 2 0 0 0 22.328125 21.90625 C 22.010535 21.883695 21.681604 21.850362 21.330078 21.794922 C 20.972682 21.738555 20.595549 21.658557 20.208984 21.568359 C 20.431451 20.547698 20.600422 19.450499 20.712891 18.296875 C 21.655038 17.623053 22.520766 16.929118 23.292969 16.226562 z M 11.21875 19.578125 C 11.49689 19.749209 11.774589 19.921665 12.0625 20.087891 C 12.350804 20.254343 12.638157 20.408922 12.925781 20.564453 C 12.434706 20.757497 11.949603 20.945062 11.480469 21.097656 C 11.378021 20.614971 11.297126 20.100056 11.21875 19.578125 z M 18.78125 19.578125 C 18.702874 20.100056 18.621979 20.614971 18.519531 21.097656 C 18.050397 20.945062 17.565294 20.757497 17.074219 20.564453 C 17.361843 20.408922 17.649196 20.254343 17.9375 20.087891 C 18.225411 19.921665 18.50311 19.749209 18.78125 19.578125 z M 15 21.595703 C 16.05472 22.07478 17.08936 22.479369 18.083984 22.796875 C 17.968943 23.176209 17.848467 23.541643 17.71875 23.878906 C 17.293105 24.985584 16.790272 25.85018 16.298828 26.390625 C 15.807384 26.93107 15.382981 27.125 15 27.125 C 14.617019 27.125 14.192616 26.93107 13.701172 26.390625 C 13.209728 25.85018 12.706895 24.985584 12.28125 23.878906 C 12.151533 23.541643 12.031057 23.176209 11.916016 22.796875 C 12.91064 22.479369 13.94528 22.07478 15 21.595703 z"/>
            </svg>
        ),
        content: (
            <div>
                A frontend build with <Link href="https://vuejs.org/">Vue</Link>, <Link href="https://preactjs.com/">(P)react</Link> or
                <Link href="https://angular.io/"> Angular</Link>, and state-management being done in <Link href="https://vuex.vuejs.org/">Vuex</Link>,
                <Link href="https://effector.dev/"> Effector</Link>, <Link href="https://mobx.js.org/README.html"> MobX</Link>, <Link href="https://redux.js.org/">Redux</Link> or
                using <Link href="https://angular.io/guide/architecture-services">services</Link>.
                That coupled with a <Link href="https://en.wikipedia.org/wiki/SQL">SQL</Link> or <Link href="https://en.wikipedia.org/wiki/NoSQL">NoSQL</Link> database and a
                <Link href="https://en.wikipedia.org/wiki/Representational_state_transfer"> RESTful</Link> / <Link href="https://www.graphql.com/">GraphQL</Link> API - I have
                worked with all of that.
            </div>
        )
    },
    {
        name: 'Cutting Edge',
        summary: 'Cutting edge technology and previews.',
        tags: {
            'wasm': 'https://webassembly.org/',
            'pwa': 'https://web.dev/tags/progressive-web-apps/'
        },
        icon: (
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
                <path d="M 82.796875 1.6660156 C 82.4625 1.6566406 82.125781 1.7007812 81.800781 1.8007812 C 69.900781 5.7007813 60.499219 14.7 56.199219 26.5 C 51.999219 38.2 53.199219 50.900391 59.699219 61.400391 C 59.899219 61.800391 60.100391 62.100391 60.400391 62.400391 C 60.500391 62.500391 60.599219 62.599609 60.699219 62.599609 C 60.799219 62.599609 60.800391 62.699219 60.900391 62.699219 C 61.000391 62.799219 61.099219 62.800391 61.199219 62.900391 C 66.299219 66.000391 72.100391 67.599609 77.900391 67.599609 C 81.600391 67.599609 85.300391 66.999609 88.900391 65.599609 C 98.300391 62.199609 105.4 54.800781 108.5 45.300781 C 108.9 44.000781 108.39922 42.600781 107.19922 41.800781 C 103.19922 39.300781 98.899219 37.799219 94.199219 37.199219 L 93.699219 37.199219 C 92.599219 37.099219 91.399219 37 90.199219 37 L 89.400391 37 C 93.200391 25.6 91.700781 13.299609 85.300781 3.0996094 C 84.775781 2.1996094 83.8 1.6941406 82.796875 1.6660156 z M 81.400391 8.3007812 C 86.000391 17.000781 86.700781 27.000391 83.300781 36.400391 C 80.000781 45.700391 72.900781 52.899609 63.800781 56.599609 C 59.200781 47.999609 58.500391 37.899609 61.900391 28.599609 C 65.300391 19.299609 72.300391 12.000781 81.400391 8.3007812 z M 35.400391 35.099609 C 35.300391 35.099609 35.199609 35.099219 35.099609 35.199219 C 34.999609 35.199219 34.900391 35.200781 34.900391 35.300781 C 34.800391 35.300781 34.699609 35.400391 34.599609 35.400391 C 34.499609 35.400391 34.500391 35.5 34.400391 35.5 C 34.300391 35.6 34.199609 35.599219 34.099609 35.699219 L 34 35.800781 C 33.9 35.900781 33.699609 35.999219 33.599609 36.199219 L 33.5 36.300781 C 33.4 36.400781 33.400781 36.5 33.300781 36.5 L 33.300781 36.599609 C 33.300781 36.599609 33.299219 36.699219 33.199219 36.699219 C 30.499219 40.899219 29.9 46.100781 31.5 50.800781 C 33.1 55.500781 36.700391 59.200391 41.400391 60.900391 L 41.5 60.900391 C 41.6 60.900391 41.599219 61 41.699219 61 L 41.800781 61 C 41.900781 61 41.999609 61.099609 42.099609 61.099609 L 42.199219 61.099609 L 42.599609 61.099609 C 42.799609 61.099609 42.999219 61.1 43.199219 61 L 43.300781 61 C 43.500781 60.9 43.700391 60.900781 43.900391 60.800781 C 43.900391 60.800781 44 60.799219 44 60.699219 C 44.2 60.599219 44.3 60.500391 44.5 60.400391 C 44.5 60.400391 44.599609 60.400781 44.599609 60.300781 C 44.799609 60.100781 44.9 60.000781 45 59.800781 L 45 59.699219 L 45.099609 59.599609 C 45.099609 59.599609 45.099219 59.5 45.199219 59.5 C 47.599219 55.6 48.299219 50.999219 47.199219 46.699219 C 46.999219 46.499219 47 46.400781 47 46.300781 L 46.699219 45.400391 C 46.499219 44.900391 46.299609 44.300781 46.099609 43.800781 C 46.099609 43.700781 46 43.599609 46 43.599609 C 45.8 43.199609 45.500781 42.700781 45.300781 42.300781 C 45.200781 42.200781 45.1 42.000391 45 41.900391 C 44.8 41.500391 44.500781 41.200781 44.300781 40.800781 C 44.200781 40.600781 44.000391 40.500781 43.900391 40.300781 C 43.600391 40.000781 43.399609 39.700391 43.099609 39.400391 L 42.599609 38.900391 C 42.299609 38.600391 41.999219 38.399609 41.699219 38.099609 C 41.499219 37.999609 41.399219 37.799219 41.199219 37.699219 C 40.899219 37.399219 40.499609 37.200391 40.099609 36.900391 C 39.999609 36.800391 39.799219 36.699219 39.699219 36.699219 C 39.299219 36.399219 38.800391 36.2 38.400391 36 C 38.300391 36 38.299219 35.900391 38.199219 35.900391 C 37.699219 35.700391 37.099609 35.399219 36.599609 35.199219 C 36.399609 35.099219 36.199609 35.099609 36.099609 35.099609 L 35.900391 35.099609 L 35.599609 35.099609 L 35.400391 35.099609 z M 44.199219 71 C 42.599219 71 41.2 72.099609 41 73.599609 C 40.8 75.399609 42.200391 76.9 43.900391 77 C 45.000391 77 46 77.9 46 79 L 46 111.59961 C 46 119.69961 52.199219 126.6 60.199219 127 C 68.799219 127.4 76 120.5 76 112 L 76 79.099609 C 76 77.999609 76.9 77 78 77 C 79.7 77 81 75.7 81 74 C 81 72.3 79.7 71 78 71 L 61 71 C 59.3 71 58 72.3 58 74 C 58 75.7 59.3 77 61 77 L 62 77 L 70.300781 77 C 70.100781 77.6 70 78.3 70 79 L 70 111.69922 C 70 116.49922 66.399609 120.7 61.599609 121 C 56.399609 121.4 52 117.2 52 112 L 52 79 C 52 74.7 48.499219 71.1 44.199219 71 z M 61 81 C 59.3 81 58 82.3 58 84 L 58 112 C 58 113.7 59.3 115 61 115 C 62.7 115 64 113.7 64 112 L 64 84 C 64 82.3 62.7 81 61 81 z"/>
            </svg>
        ),
        content: (
            <div>
                I have experience with <Link href="https://webassembly.org">webassembly</Link> (e.g. <Link href="https://github.com/Simonwep/conway">conway</Link>),
                <Link href="https://web.dev/progressive-web-apps/"> PWAs</Link>, <Link href="https://web.dev/workers-overview/">WebWorkers</Link> (or
                multi-threaded web-apps) and <Link href="https://web.dev/tags/service-worker/"> Service workers</Link>.
                I&apos;m also interested on the next-gen web with things like <Link href="https://ishoudinireadyyet.com/">CSS Houdini</Link> and
                the <Link href="https://tc39.es/">TC39</Link> committee.
            </div>
        )
    }
];

const colors = skills.map((_, index) => `hsl(${(index / skills.length) * 190 + 90}, 50%, 70%)`);

export const Skills: FunctionalComponent = () => {
    const [openCards, setOpenCards] = useState<Array<boolean>>(new Array(skills.length).fill(false));

    const bindCardChange = (index: number) => (open: boolean) => {
        setOpenCards([
            ...openCards.slice(0, index), open,
            ...openCards.slice(index + 1)
        ]);

        track.general.skillFlipped();
    };

    return (
        <PageSection title="Skills" id="skills"
                     intro="Tap a card to learn more about it :)">
            <div className={styles.skills}>
                {skills.map((value, index) => (
                    <div key={value.name} style={{'--open-color': colors[index]}}>
                        <SkillCard onFlip={bindCardChange(index)} {...value}/>
                    </div>
                ))}
            </div>

            <div className={styles.tags}>
                {skills.map((value, skillIndex) => {
                    const style = {'--accent': colors[skillIndex]};
                    const highlight = openCards[skillIndex];

                    return <>
                        {Object.entries(value.tags).map((v, tagIndex) => (
                            <span key={tagIndex} data-highlight={highlight} style={style}>
                                <Link key={v[1]} href={v[1]}>
                                    <p>{v[0]}</p>
                                    <p>{v[0]}</p>
                                </Link>
                            </span>
                        ))}
                    </>;
                })}
            </div>
        </PageSection>
    );
};
